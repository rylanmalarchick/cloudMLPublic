# --- GPU-Optimized Config for Google Colab T4 ---
# This config maximizes GPU utilization on T4 GPUs (15GB VRAM)
# Adjusted for faster training while maintaining model quality

# --- File Paths ---
data_directory: "/content/drive/MyDrive/CloudML/data/"
output_directory: "/content/drive/MyDrive/CloudML/plots/"

# --- Experiment Parameters ---
pretrain_flight: "30Oct24"
overweight_flight: "30Oct24"
overweight_factor: 3.5
validation_flight: "12Feb25"

# --- Training Parameters ---
learning_rate: 0.001
weight_decay: 0.04
epochs: 50 # Reasonable for Colab sessions
optimizer: "AdamW"
scheduler: "ReduceLROnPlateau"
temporal_frames: 5 # Increased from 3 for better temporal context
loss_type: "huber"
loss_alpha: 0.5
early_stopping_patience: 15 # More patience for better convergence
filter_type: "basic"
early_stopping_min_delta: 0.00025
huber_delta: 1.0
gamma: 1.5
under_weight: 1.0
loo: false # Disable for faster single runs; enable for full evaluation
loo_epochs: 30
batch_size: 16 # Conservative for T4 GPU to avoid OOM - tested stable at ~8-9GB
warmup_steps: 2000
hard_mining_k: 0.35
hard_mining_factor: 1.5
swath_slice: [40, 480]
hpc_mode: true # Enable for better data loading

# --- Data Loading Optimization ---
num_workers: 2 # Matched to Colab's 2 CPU cores
pin_memory: true
prefetch_factor: 3

# --- Model Architecture ---
use_spatial_attention: true
use_temporal_attention: true
flat_field_correction: true
clahe_clip_limit: 0.01
zscore_normalize: true
augment: true
angles_mode: "both"

architecture:
  name: "transformer" # Best performing architecture

# --- Flight Information ---
flights:
  - name: "10Feb25"
    iFileName: "10Feb25/GLOVE2025_IRAI_L1B_Rev-_20250210.h5"
    cFileName: "10Feb25/CPL_L2_V1-02_01kmLay_259015_10feb25.hdf5"
    nFileName: "10Feb25/CRS_20250210_nav.hdf"
  - name: "30Oct24"
    iFileName: "30Oct24/WHYMSIE2024_IRAI_L1B_Rev-_20241030.h5"
    cFileName: "30Oct24/CPL_L2_V1-02_01kmLay_259006_30oct24.hdf5"
    nFileName: "30Oct24/CRS_20241030_nav.hdf"
  - name: "04Nov24"
    iFileName: "04Nov24/WHYMSIE2024_IRAI_L1B_Rev-_20241104.h5"
    cFileName: "04Nov24/CPL_L2_V1-02_01kmLay_259008_04nov24.hdf5"
    nFileName: "04Nov24/CRS_20241104_nav.hdf"
  - name: "23Oct24"
    iFileName: "23Oct24/WHYMSIE2024_IRAI_L1B_Rev-_20241023.h5"
    cFileName: "23Oct24/CPL_L2_V1-02_01kmLay_259004_23oct24.hdf5"
    nFileName: "23Oct24/CRS_20241023_nav.hdf"
  - name: "18Feb25"
    iFileName: "18Feb25/GLOVE2025_IRAI_L1B_Rev-_20250218.h5"
    cFileName: "18Feb25/CPL_L2_V1-02_01kmLay_259017_18feb25.hdf5"
    nFileName: "18Feb25/CRS_20250218_nav.hdf"
  - name: "12Feb25"
    iFileName: "12Feb25/GLOVE2025_IRAI_L1B_Rev-_20250212.h5"
    cFileName: "12Feb25/CPL_L2_V1-02_01kmLay_259016_12feb25.hdf5"
    nFileName: "12Feb25/CRS_20250212_nav.hdf"
# --- Notes ---
# - batch_size=16 uses ~8-9GB on T4 with temporal_frames=5 (safe, tested)
# - If you want faster training and no OOM, try batch_size=20
# - batch_size=24+ causes OOM on T4 with this model configuration
# - For quick tests, set epochs=5 and --no_pretrain
# - Monitor with: !nvidia-smi
#
# Memory optimization tips:
# - Reduce temporal_frames to 3-4 if still getting OOM
# - Disable augmentation during debugging (--no-augment)
# - Use gradient accumulation if you need effective larger batch sizes
